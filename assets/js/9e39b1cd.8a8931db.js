"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[813],{3279:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var l=i(7462),t=(i(7294),i(3905));const a={id:"config",sidebar_position:7},o="@actinc/config",p={unversionedId:"cli/config",id:"cli/config",title:"@actinc/config",description:"@actinc/config commands",source:"@site/docs/cli/cli.md",sourceDirName:"cli",slug:"/cli/",permalink:"/configs/docs/cli/",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"config",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"config",permalink:"/configs/docs/markdownlint-config/config"}},u={},s=[{value:"<code>config add eslint</code>",id:"config-add-eslint",level:2},{value:"<code>config add prettier</code>",id:"config-add-prettier",level:2},{value:"<code>config help [COMMAND]</code>",id:"config-help-command",level:2},{value:"<code>config plugins</code>",id:"config-plugins",level:2},{value:"<code>config plugins:install PLUGIN...</code>",id:"config-pluginsinstall-plugin",level:2},{value:"<code>config plugins:inspect PLUGIN...</code>",id:"config-pluginsinspect-plugin",level:2},{value:"<code>config plugins:install PLUGIN...</code>",id:"config-pluginsinstall-plugin-1",level:2},{value:"<code>config plugins:link PLUGIN</code>",id:"config-pluginslink-plugin",level:2},{value:"<code>config plugins:uninstall PLUGIN...</code>",id:"config-pluginsuninstall-plugin",level:2},{value:"<code>config plugins:uninstall PLUGIN...</code>",id:"config-pluginsuninstall-plugin-1",level:2},{value:"<code>config plugins:uninstall PLUGIN...</code>",id:"config-pluginsuninstall-plugin-2",level:2},{value:"<code>config plugins update</code>",id:"config-plugins-update",level:2}],g={toc:s};function c(n){let{components:e,...i}=n;return(0,t.kt)("wrapper",(0,l.Z)({},g,i,{components:e,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"actincconfig"},"@actinc/config"),(0,t.kt)("p",null,"@actinc/config commands"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#usage"},"Usage")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#commands"},"Commands"))),(0,t.kt)("h1",{id:"usage"},"Usage"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sh-session"},"$ npm install -g @actinc/config\n$ config COMMAND\nrunning command...\n$ config (--version)\n@actinc/config/1.0.0 linux-x64 node-v16.15.1\n$ config --help [COMMAND]\nUSAGE\n  $ config COMMAND\n...\n")),(0,t.kt)("h1",{id:"commands"},"Commands"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-add-eslint"},(0,t.kt)("inlineCode",{parentName:"a"},"config add eslint"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-add-prettier"},(0,t.kt)("inlineCode",{parentName:"a"},"config add prettier"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-help-command"},(0,t.kt)("inlineCode",{parentName:"a"},"config help [COMMAND]"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-plugins"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-pluginsinstall-plugin"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins:install PLUGIN..."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-pluginsinspect-plugin"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins:inspect PLUGIN..."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-pluginsinstall-plugin-1"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins:install PLUGIN..."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-pluginslink-plugin"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins:link PLUGIN"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-pluginsuninstall-plugin"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins:uninstall PLUGIN..."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-pluginsuninstall-plugin-1"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins:uninstall PLUGIN..."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-pluginsuninstall-plugin-2"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins:uninstall PLUGIN..."))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"#config-plugins-update"},(0,t.kt)("inlineCode",{parentName:"a"},"config plugins update")))),(0,t.kt)("h2",{id:"config-add-eslint"},(0,t.kt)("inlineCode",{parentName:"h2"},"config add eslint")),(0,t.kt)("p",null,"Add ESLint to the current project"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config add eslint [-c nest|react|base] [-f]\n\nFLAGS\n  -c, --config=<option>  [default: base]\n                         <options: nest|react|base>\n  -f, --force\n\nDESCRIPTION\n  Add ESLint to the current project\n\nEXAMPLES\n  @actinc/config add eslint -c react\n")),(0,t.kt)("h2",{id:"config-add-prettier"},(0,t.kt)("inlineCode",{parentName:"h2"},"config add prettier")),(0,t.kt)("p",null,"describe the command here"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config add prettier [-c <value>] [-f]\n\nFLAGS\n  -c, --config=<value>  [default: base]\n  -f, --force\n\nDESCRIPTION\n  describe the command here\n\nEXAMPLES\n  adds ACT eslint to a current working folder\n")),(0,t.kt)("h2",{id:"config-help-command"},(0,t.kt)("inlineCode",{parentName:"h2"},"config help [COMMAND]")),(0,t.kt)("p",null,"Display help for config."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config help [COMMAND] [-n]\n\nARGUMENTS\n  COMMAND  Command to show help for.\n\nFLAGS\n  -n, --nested-commands  Include all nested commands in the output.\n\nDESCRIPTION\n  Display help for config.\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/oclif/plugin-help/blob/v5.1.12/src/commands/help.ts"},"@oclif/plugin-help"))),(0,t.kt)("h2",{id:"config-plugins"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins")),(0,t.kt)("p",null,"List installed plugins."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins [--core]\n\nFLAGS\n  --core  Show core plugins.\n\nDESCRIPTION\n  List installed plugins.\n\nEXAMPLES\n  $ config plugins\n")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"See code: ",(0,t.kt)("a",{parentName:"em",href:"https://github.com/oclif/plugin-plugins/blob/v2.0.11/src/commands/plugins/index.ts"},"@oclif/plugin-plugins"))),(0,t.kt)("h2",{id:"config-pluginsinstall-plugin"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins:install PLUGIN...")),(0,t.kt)("p",null,"Installs a plugin into the CLI."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins:install PLUGIN...\n\nARGUMENTS\n  PLUGIN  Plugin to install.\n\nFLAGS\n  -f, --force    Run yarn install with force flag.\n  -h, --help     Show CLI help.\n  -v, --verbose\n\nDESCRIPTION\n  Installs a plugin into the CLI.\n\n  Can be installed from npm or a git url.\n\n  Installation of a user-installed plugin will override a core plugin.\n\n  e.g. If you have a core plugin that has a 'hello' command, installing a user-installed plugin with a 'hello' command\n  will override the core plugin implementation. This is useful if a user needs to update core plugin functionality in\n  the CLI without the need to patch and update the whole CLI.\n\nALIASES\n  $ config plugins add\n\nEXAMPLES\n  $ config plugins:install myplugin \n\n  $ config plugins:install https://github.com/someuser/someplugin\n\n  $ config plugins:install someuser/someplugin\n")),(0,t.kt)("h2",{id:"config-pluginsinspect-plugin"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins:inspect PLUGIN...")),(0,t.kt)("p",null,"Displays installation properties of a plugin."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins:inspect PLUGIN...\n\nARGUMENTS\n  PLUGIN  [default: .] Plugin to inspect.\n\nFLAGS\n  -h, --help     Show CLI help.\n  -v, --verbose\n\nDESCRIPTION\n  Displays installation properties of a plugin.\n\nEXAMPLES\n  $ config plugins:inspect myplugin\n")),(0,t.kt)("h2",{id:"config-pluginsinstall-plugin-1"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins:install PLUGIN...")),(0,t.kt)("p",null,"Installs a plugin into the CLI."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins:install PLUGIN...\n\nARGUMENTS\n  PLUGIN  Plugin to install.\n\nFLAGS\n  -f, --force    Run yarn install with force flag.\n  -h, --help     Show CLI help.\n  -v, --verbose\n\nDESCRIPTION\n  Installs a plugin into the CLI.\n\n  Can be installed from npm or a git url.\n\n  Installation of a user-installed plugin will override a core plugin.\n\n  e.g. If you have a core plugin that has a 'hello' command, installing a user-installed plugin with a 'hello' command\n  will override the core plugin implementation. This is useful if a user needs to update core plugin functionality in\n  the CLI without the need to patch and update the whole CLI.\n\nALIASES\n  $ config plugins add\n\nEXAMPLES\n  $ config plugins:install myplugin \n\n  $ config plugins:install https://github.com/someuser/someplugin\n\n  $ config plugins:install someuser/someplugin\n")),(0,t.kt)("h2",{id:"config-pluginslink-plugin"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins:link PLUGIN")),(0,t.kt)("p",null,"Links a plugin into the CLI for development."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins:link PLUGIN\n\nARGUMENTS\n  PATH  [default: .] path to plugin\n\nFLAGS\n  -h, --help     Show CLI help.\n  -v, --verbose\n\nDESCRIPTION\n  Links a plugin into the CLI for development.\n\n  Installation of a linked plugin will override a user-installed or core plugin.\n\n  e.g. If you have a user-installed or core plugin that has a 'hello' command, installing a linked plugin with a 'hello'\n  command will override the user-installed or core plugin implementation. This is useful for development work.\n\nEXAMPLES\n  $ config plugins:link myplugin\n")),(0,t.kt)("h2",{id:"config-pluginsuninstall-plugin"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins:uninstall PLUGIN...")),(0,t.kt)("p",null,"Removes a plugin from the CLI."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins:uninstall PLUGIN...\n\nARGUMENTS\n  PLUGIN  plugin to uninstall\n\nFLAGS\n  -h, --help     Show CLI help.\n  -v, --verbose\n\nDESCRIPTION\n  Removes a plugin from the CLI.\n\nALIASES\n  $ config plugins unlink\n  $ config plugins remove\n")),(0,t.kt)("h2",{id:"config-pluginsuninstall-plugin-1"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins:uninstall PLUGIN...")),(0,t.kt)("p",null,"Removes a plugin from the CLI."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins:uninstall PLUGIN...\n\nARGUMENTS\n  PLUGIN  plugin to uninstall\n\nFLAGS\n  -h, --help     Show CLI help.\n  -v, --verbose\n\nDESCRIPTION\n  Removes a plugin from the CLI.\n\nALIASES\n  $ config plugins unlink\n  $ config plugins remove\n")),(0,t.kt)("h2",{id:"config-pluginsuninstall-plugin-2"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins:uninstall PLUGIN...")),(0,t.kt)("p",null,"Removes a plugin from the CLI."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins:uninstall PLUGIN...\n\nARGUMENTS\n  PLUGIN  plugin to uninstall\n\nFLAGS\n  -h, --help     Show CLI help.\n  -v, --verbose\n\nDESCRIPTION\n  Removes a plugin from the CLI.\n\nALIASES\n  $ config plugins unlink\n  $ config plugins remove\n")),(0,t.kt)("h2",{id:"config-plugins-update"},(0,t.kt)("inlineCode",{parentName:"h2"},"config plugins update")),(0,t.kt)("p",null,"Update installed plugins."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre"},"USAGE\n  $ config plugins update [-h] [-v]\n\nFLAGS\n  -h, --help     Show CLI help.\n  -v, --verbose\n\nDESCRIPTION\n  Update installed plugins.\n")))}c.isMDXComponent=!0}}]);