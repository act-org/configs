"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[568],{9067:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(7462),s=(n(7294),n(3905));const a={id:"eslint-plugin",sidebar_position:2},o="@actinc/eslint-plugin",l={unversionedId:"eslint-plugin/eslint-plugin",id:"eslint-plugin/eslint-plugin",title:"@actinc/eslint-plugin",description:"This serves as a plugin to store the variety of pre-configured ACT eslint plugins and rules used for projects.",source:"@site/docs/eslint-plugin/eslint-plugin.md",sourceDirName:"eslint-plugin",slug:"/eslint-plugin/",permalink:"/configs/docs/eslint-plugin/",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"eslint-plugin",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Configuration Suite",permalink:"/configs/docs/intro"},next:{title:"base",permalink:"/configs/docs/eslint-plugin/base"}},r={},p=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Configuration Options",id:"configuration-options",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"actinceslint-plugin"},"@actinc/eslint-plugin"),(0,s.kt)("p",null,"This serves as a plugin to store the variety of pre-configured ACT eslint plugins and rules used for projects.",(0,s.kt)("br",{parentName:"p"}),"\n","This is organized as a plugin to enable the current and upcoming requirement of ESLint to only load additional plugins from plugins.",(0,s.kt)("br",{parentName:"p"}),"\n","This way, you only need to have eslint and prettier installed as peer dependencies."),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @actinc/eslint-plugin @actinc/prettier-config eslint prettier\n")),(0,s.kt)("h2",{id:"configuration"},"Configuration"),(0,s.kt)("p",null,"The easiest way is to add this to your package.json file"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'  "prettier": "@actinc/prettier-config",\n  "eslintConfig": {\n    "extends": [\n      "plugin:@actinc/react"\n    ],\n    "plugins": [\n      "@actinc"\n    ]\n  }\n')),(0,s.kt)("p",null,"If you need more sophisticated customization options, you can instead put this into an .eslintrc.js and/or .prettierrc.js file or whatever supported configuration file you prefer."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"echo \"module.exports = {extends: ['plugin:@actinc/react']}\" > .eslintrc.js\necho \"module.exports = module.exports = {...require('@actinc/prettier-config')};\" > .prettierrc.js\n\n")),(0,s.kt)("h3",{id:"configuration-options"},"Configuration Options"),(0,s.kt)("p",null,"These are the current supported configuration options available"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"plugin:@actinc/base - This is the base definition that includes most of the basic and some extended eslint rules.  This is intended for vanilla javascript"),(0,s.kt)("li",{parentName:"ol"},"plugin:@actinc/typescript - This is intended for basic plain typescript projects and utilities, it extends base"),(0,s.kt)("li",{parentName:"ol"},"plugin:@actinc/nest - This is intended for NestJS Projects.  It extends typescript"),(0,s.kt)("li",{parentName:"ol"},"plugin:@actinc/react - This is for all react projects.  It extends typescript")))}u.isMDXComponent=!0}}]);